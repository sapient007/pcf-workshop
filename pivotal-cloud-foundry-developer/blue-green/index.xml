<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blue-greens on Pivotal Cloud Foundry Developer</title>
    <link>/pivotal-cloud-foundry-developer/blue-green/</link>
    <description>Recent content in Blue-greens on Pivotal Cloud Foundry Developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© Copyright Pivotal. All rights reserved.</copyright>
    <lastBuildDate>Mon, 07 Mar 2016 15:49:50 -0600</lastBuildDate>
    <atom:link href="/pivotal-cloud-foundry-developer/blue-green/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Blue Green</title>
      <link>/pivotal-cloud-foundry-developer/blue-green/</link>
      <pubDate>Mon, 07 Mar 2016 15:49:50 -0600</pubDate>
      
      <guid>/pivotal-cloud-foundry-developer/blue-green/</guid>
      <description>

&lt;p&gt;Estimated Time: 25 minutes&lt;/p&gt;

&lt;h1 id=&#34;requirements:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Requirements&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;/pivotal-cloud-foundry-developer/pivotal-cloud-foundry-developer/requirements&#34;&gt;Lab Requirements&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;what-you-will-learn:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;What you will learn&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;How to manage an application upgrade with a blue-green deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;exercises:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Exercises&lt;/h1&gt;

&lt;h2 id=&#34;setup:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Setup&lt;/h2&gt;

&lt;p&gt;1) To simulate a blue-green deployment, first scale &lt;code&gt;articulate&lt;/code&gt; to multiple instances.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf scale articulate -i 2
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;perform-a-blue-green-deployment:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Perform a Blue-Green Deployment&lt;/h2&gt;

&lt;p&gt;1) Read about using&lt;a href=https://docs.pivotal.io/pivotalcf/devguide/deploy-apps/blue-green.html target=&#34;_blank&#34;&gt;Blue-Green Deployments to reduce downtime and risk&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;2) Browse to the &lt;code&gt;articulate&lt;/code&gt; &lt;code&gt;Blue-Green&lt;/code&gt; page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/pivotal-cloud-foundry-developer/pivotal-cloud-foundry-developer/resources/images/blue_green.png&#34; alt=&#34;Blue-Green Deployments&#34; title=&#34;Blue-Green&#34; /&gt;&lt;/p&gt;

&lt;p&gt;3) Lets assume that the deployed application is version 1.  Let&amp;rsquo;s generate some traffic.  Press the &lt;code&gt;Start&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Leave this open as a dedicated tab in your browser.  We will come back to this later.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;4) Observe our existing application handling all the web requests.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/pivotal-cloud-foundry-developer/pivotal-cloud-foundry-developer/resources/images/start.png&#34; alt=&#34;Start Load&#34; title=&#34;Start Load&#34; /&gt;&lt;/p&gt;

&lt;p&gt;5) Record the subdomain (&lt;code&gt;host&lt;/code&gt;) for the &lt;code&gt;articulate&lt;/code&gt; application.&lt;/p&gt;

&lt;p&gt;This is our production route.  &lt;em&gt;You will use this in the next step.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf routes

Getting routes as droberts@pivotal.io ...

space   host                                           domain                   apps   
dev     articulate-heartsickening-elegance             pcfi1.fe.gopivotal.com   articulate   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;6) Now let&amp;rsquo;s &lt;code&gt;push&lt;/code&gt; the next version of &lt;code&gt;articulate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, this time we will specify the subdomain by appending &lt;code&gt;-temp&lt;/code&gt; to our production route.&lt;/p&gt;

&lt;p&gt;For example (your subdomain will be different):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd ~/pivotal-cloud-foundry-developer-workshop/articulate/
$ cf push articulate-v2 -p ./articulate-0.0.1-SNAPSHOT.jar -m 512M -n articulate-heartsickening-elegance-temp --no-start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;7) Bind &lt;code&gt;articulate-v2&lt;/code&gt; to the &lt;code&gt;attendee-service&lt;/code&gt; user provided service.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf bind-service articulate-v2 attendee-service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;You can ignore the &amp;ldquo;TIP: Use &amp;lsquo;cf restage articulate-v2&amp;rsquo; to ensure your env variable changes take effect&amp;rdquo; message at this time.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;8) Start the application.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf start articulate-v2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;9) Now we have two versions of our app deployed.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Open a new tab&lt;/em&gt; and view version 2 of &lt;code&gt;articulate&lt;/code&gt; in your browser.  Take note of the application name.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/pivotal-cloud-foundry-developer/pivotal-cloud-foundry-developer/resources/images/green.png&#34; alt=&#34;Green&#34; title=&#34;Green&#34; /&gt;&lt;/p&gt;

&lt;p&gt;At this point in the deployment process, you could do further testing of the version you are about to release before exposing customers to it.&lt;/p&gt;

&lt;p&gt;10) Let&amp;rsquo;s assume we are ready to start directing production traffic to version 2.  We need to map our production route to &lt;code&gt;articulate-v2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example (your domain and subdomain will be different):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf map-route articulate-v2 pcfi1.fe.gopivotal.com -n articulate-heartsickening-elegance
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;11) Return to browser tab where you started the load.  You should see that it is starting to send requests to version 2.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/pivotal-cloud-foundry-developer/pivotal-cloud-foundry-developer/resources/images/map_route.png&#34; alt=&#34;Map Route&#34; title=&#34;Map Route&#34; /&gt;&lt;/p&gt;

&lt;p&gt;12) Press the &lt;code&gt;Reset&lt;/code&gt; button, so we can see how the load get distributed across app instances.&lt;/p&gt;

&lt;p&gt;If you are running with a similar configuration to this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cf apps
Getting apps in org dave / space dev as droberts@pivotal.io...
OK

name                     requested state   instances   memory   disk   urls   
articulate               started           2/2         512M       1G     ...
articulate-v2            started           1/1         512M       1G     ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should see about a third of the requests going to version 2.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/pivotal-cloud-foundry-developer/pivotal-cloud-foundry-developer/resources/images/third.png&#34; alt=&#34;Third&#34; title=&#34;Quarter&#34; /&gt;&lt;/p&gt;

&lt;p&gt;13) Move more traffic to version 2.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf scale articulate -i 1
$ cf scale articulate-v2 -i 2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you &lt;code&gt;Reset&lt;/code&gt; the load generator, you will see &lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt; of the traffic go to &lt;code&gt;articulate-v2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;14) Move all traffic to version 2.&lt;/p&gt;

&lt;p&gt;Remove the production route from the &lt;code&gt;articulate&lt;/code&gt; application.&lt;/p&gt;

&lt;p&gt;For example (your domain and subdomain will be different):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf unmap-route articulate pcfi1.fe.gopivotal.com -n articulate-heartsickening-elegance
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you &lt;code&gt;Reset&lt;/code&gt; the load generator, you will see all the traffic goes to &lt;code&gt;articulate-v2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/pivotal-cloud-foundry-developer/pivotal-cloud-foundry-developer/resources/images/unmap.png&#34; alt=&#34;Unmap&#34; title=&#34;Unmap&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE:&lt;/em&gt;&lt;/strong&gt; Refreshing the entire page will update the application name.&lt;/p&gt;

&lt;p&gt;15) Remove the temp route from the &lt;code&gt;articulate-v2&lt;/code&gt; application.&lt;/p&gt;

&lt;p&gt;For example (your domain and subdomain will be different):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf unmap-route articulate-v2 pcfi1.fe.gopivotal.com -n articulate-heartsickening-elegance-temp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Congratulations!&lt;/strong&gt; You performed a blue-green deployment.&lt;/p&gt;

&lt;h3 id=&#34;questions:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Questions&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;How would a rollback situation be handled using a blue-green deployment?&lt;/li&gt;
&lt;li&gt;What other design implications does running at least two versions at the same time have on your applications?&lt;/li&gt;
&lt;li&gt;Do you do blue-green deployments today?  How is this different?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;cleanup:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Cleanup&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s reset our environment.&lt;/p&gt;

&lt;p&gt;1) Delete the &lt;code&gt;articulate&lt;/code&gt; application.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf delete articulate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2) Rename &lt;code&gt;articulate-v2&lt;/code&gt; to &lt;code&gt;articulate&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf rename articulate-v2 articulate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3) Restart &lt;code&gt;articulate&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf restart articulate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4) Scale down.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf scale articulate -i 1
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Instructor Notes</title>
      <link>/pivotal-cloud-foundry-developer/blue-green/notes/</link>
      <pubDate>Mon, 07 Mar 2016 15:49:50 -0600</pubDate>
      
      <guid>/pivotal-cloud-foundry-developer/blue-green/notes/</guid>
      <description>

&lt;h1 id=&#34;questions:db235fc914867ffea6b540c8732499d5&#34;&gt;Questions&lt;/h1&gt;

&lt;p&gt;After completing the lab recap as a class the following questions:&lt;/p&gt;

&lt;h2 id=&#34;general-discussion-questions:db235fc914867ffea6b540c8732499d5&#34;&gt;General Discussion Questions&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; &lt;em&gt;What is the purpose of a blue-green deployment?&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt; No downtime deployments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; &lt;em&gt;How is the distribution of traffic handled when running multiple versions of an app?&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt; Percentage of app instances bound to the route.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; &lt;em&gt;True or False.  When releasing a new version of an application, adding a new non nullable field to a database table is an acceptable blue-green strategy.&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt; False&lt;/p&gt;

&lt;h2 id=&#34;questions-from-the-lab:db235fc914867ffea6b540c8732499d5&#34;&gt;Questions From the Lab&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; &lt;em&gt;How would a rollback situation be handled using a blue-green deployment?&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt; Unmap the production route.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; &lt;em&gt;What other design implications does running at least two versions at the same time have on your applications?&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt;  We covered several in the preso/lab.  The key here is that changes have to be backwards compatible.  Challenge students to discuss their own apps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; &lt;em&gt;Do you do blue-green deployments today? How is this different?&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt; This is an open discussion.&lt;/p&gt;

&lt;h1 id=&#34;troubleshooting:db235fc914867ffea6b540c8732499d5&#34;&gt;Troubleshooting&lt;/h1&gt;

&lt;p&gt;Troubleshooting guidance for the lab that instructors need to know.&lt;/p&gt;

&lt;h1 id=&#34;feedback:db235fc914867ffea6b540c8732499d5&#34;&gt;Feedback&lt;/h1&gt;

&lt;p&gt;Please keep track of all types of feedback, so that we can make this module great.  That includes questions that students may ask that we should be answering up front, lab corrections/improvements, etc.&lt;/p&gt;

&lt;p&gt;Submit feedback to: &lt;a href=&#34;mailto:pcf-developer-instructor-feedback@pivotal.io&#34;&gt;pcf-developer-instructor-feedback@pivotal.io&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>