<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Application-auto-scalers on Pivotal Cloud Foundry Developer</title>
    <link>/pivotal-cloud-foundry-developer/application-auto-scaler/</link>
    <description>Recent content in Application-auto-scalers on Pivotal Cloud Foundry Developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Copyright Pivotal. All rights reserved.</copyright>
    <lastBuildDate>Mon, 07 Mar 2016 15:49:50 -0600</lastBuildDate>
    <atom:link href="/pivotal-cloud-foundry-developer/application-auto-scaler/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Application Autoscaler</title>
      <link>/pivotal-cloud-foundry-developer/application-auto-scaler/</link>
      <pubDate>Mon, 07 Mar 2016 15:49:50 -0600</pubDate>
      
      <guid>/pivotal-cloud-foundry-developer/application-auto-scaler/</guid>
      <description>

&lt;p&gt;Estimated Time: 25 minutes&lt;/p&gt;

&lt;h1 id=&#34;requirements:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Requirements&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;/pivotal-cloud-foundry-developer/pivotal-cloud-foundry-developer/requirements&#34;&gt;Lab Requirements&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;what-you-will-learn:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;What you will learn&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;How to use the &lt;code&gt;app-autoscaler&lt;/code&gt; service&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;exercises:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Exercises&lt;/h1&gt;

&lt;h2 id=&#34;setup:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Setup&lt;/h2&gt;

&lt;p&gt;1) Ensure the &lt;code&gt;articulate&lt;/code&gt; application has one application instance running.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf scale articulate -i 1
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;provision-and-bind-an-autoscaler-service-instance:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Provision and Bind an Autoscaler Service Instance&lt;/h2&gt;

&lt;p&gt;1) Read the documentation about App Autoscaling &lt;a href=https://docs.pivotal.io/pivotalcf/customizing/autoscale-configuration.html target=&#34;_blank&#34;&gt;in response to load&lt;/a&gt; and &lt;a href=https://docs.pivotal.io/pivotalcf/customizing/scheduled-scaling.html target=&#34;blank&#34;&gt;scheduled scaling&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;2) Review what&amp;rsquo;s in the marketplace.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf marketplace
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3) Create a autoscaler service instance.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf create-service app-autoscaler gold autoscaler
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4) Bind the service to &lt;code&gt;articulate&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf bind-service articulate autoscaler
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;You can ignore the &amp;ldquo;TIP: Use &amp;lsquo;cf restage articulate&amp;rsquo; to ensure your env variable changes take effect&amp;rdquo; message at this time.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;5) Restart the application.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf restart articulate
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;configuring-autoscaling-service-instance:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Configuring Autoscaling Service Instance&lt;/h2&gt;

&lt;p&gt;1) View &lt;code&gt;articulate&lt;/code&gt; in Apps Manager.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Navigate to the &lt;code&gt;Services&lt;/code&gt; tab.&lt;/li&gt;
&lt;li&gt;Click the &lt;code&gt;Manage&lt;/code&gt; link for the autoscaler (this will open a new tab).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;/pivotal-cloud-foundry-developer/pivotal-cloud-foundry-developer/resources/images/manage.png&#34; alt=&#34;Manage&#34; title=&#34;Manage&#34; /&gt;&lt;/p&gt;

&lt;p&gt;2) &lt;code&gt;Turn on&lt;/code&gt; autoscaling for &lt;code&gt;articulate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/pivotal-cloud-foundry-developer/pivotal-cloud-foundry-developer/resources/images/turn_on.png&#34; alt=&#34;Turn On&#34; title=&#34;Turn On&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We will use policy defaults.  Note that the default policy for minimum instances is &lt;code&gt;2&lt;/code&gt;.
&lt;img src=&#34;/pivotal-cloud-foundry-developer/pivotal-cloud-foundry-developer/resources/images/settings.png&#34; alt=&#34;Settings&#34; title=&#34;Settings&#34; /&gt;&lt;/p&gt;

&lt;p&gt;3) Return to Apps Manager and observe the number of instances increase from &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;generate-load-and-observe-the-results:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Generate Load and Observe the Results&lt;/h2&gt;

&lt;p&gt;1) Download &lt;a href=http://jmeter.apache.org/download_jmeter.cgi target=&#34;_blank&#34;&gt;Apache JMeter&lt;/a&gt;.  It will be used to generate load.  Review the JMeter &lt;a href=http://jmeter.apache.org/usermanual/get-started.html target=&#34;_blank&#34;&gt;getting started&lt;/a&gt; directions.&lt;/p&gt;

&lt;p&gt;Helpful hints for &lt;code&gt;Linux and Mac&lt;/code&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add execute permissions to the jmeter script: &lt;code&gt;chmod +x $WHERE_YOU_EXTRACTED_THE_ZIP/bin/jmeter.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start Jmeter by executing &lt;code&gt;$WHERE_YOU_EXTRACTED_THE_ZIP/bin/jmeter.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Helpful hints for &lt;code&gt;Windows&lt;/code&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Start Jmeter by double clicking the following file in Windows Explorer: &lt;code&gt;$WHERE_YOU_EXTRACTED_THE_ZIP/bin/jmeter.bat&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2) Download the &lt;a href=&#34;/pivotal-cloud-foundry-developer/pivotal-cloud-foundry-developer/resources/jmx/load-gen.jmx&#34;&gt;load-gen.jmx&lt;/a&gt; file.&lt;/p&gt;

&lt;p&gt;3) Open the load-gen.jmx file with the JMeter GUI.&lt;/p&gt;

&lt;p&gt;4) Expand the content of the JMeter test plan by:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Selecting the &lt;code&gt;Load Generator&lt;/code&gt; test plan on the left pane.&lt;/li&gt;
&lt;li&gt;Going to the menu: &lt;code&gt;Option&lt;/code&gt; → &lt;code&gt;Expand All&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;5) Edit the test plan to use your application’s URL (do not include the &lt;code&gt;http://&lt;/code&gt;) and the &lt;code&gt;/services&lt;/code&gt; endpoint.&lt;/p&gt;

&lt;p&gt;To do so, change the &lt;code&gt;Server Name or IP&lt;/code&gt; field on the &lt;code&gt;HTTP Request Defaults&lt;/code&gt; item.&lt;/p&gt;

&lt;p&gt;For Example: &lt;code&gt;articulate-eyesome-kilocalorie.pcfi1.fe.gopivotal.com/services&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;6) Save the test plan: &lt;code&gt;File&lt;/code&gt; → &lt;code&gt;Save&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;7) Run the test plan: &lt;code&gt;Run&lt;/code&gt; → &lt;code&gt;Start&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;8) Use Apps Manager and the &lt;code&gt;cf&lt;/code&gt; CLI to observe your service scale up and back down based on load.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE:&lt;/em&gt;&lt;/strong&gt; You may see &lt;code&gt;articulate&lt;/code&gt; crash when placing load on it in this scenario.  This is okay.  We are running the application with a lower memory setting so that we can scale within quota limits.&lt;/p&gt;

&lt;p&gt;9) Stop the test plan: &lt;code&gt;Run&lt;/code&gt; → &lt;code&gt;Stop&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;10) Review Autoscale history.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/pivotal-cloud-foundry-developer/pivotal-cloud-foundry-developer/resources/images/history.png&#34; alt=&#34;History&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;clean-up:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Clean up&lt;/h2&gt;

&lt;p&gt;1) Unbind the &lt;code&gt;autoscaler&lt;/code&gt; service instance.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf unbind-service articulate autoscaler
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2) Delete the &lt;code&gt;autoscaler&lt;/code&gt; service instance.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf delete-service autoscaler
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3) Scale &lt;code&gt;articulate&lt;/code&gt; back to original settings.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf scale articulate -i 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4) Restart &lt;code&gt;articulate&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cf restart articulate
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;questions:d680e8a854a7cbad6d490c445cba2eba&#34;&gt;Questions&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;How do you handle autoscaling today?&lt;/li&gt;
&lt;li&gt;What 12 factor principles are important when it comes to scaling?&lt;/li&gt;
&lt;li&gt;How do you handle scaling at the data layer?&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Instructor Notes</title>
      <link>/pivotal-cloud-foundry-developer/application-auto-scaler/notes/</link>
      <pubDate>Mon, 07 Mar 2016 15:49:50 -0600</pubDate>
      
      <guid>/pivotal-cloud-foundry-developer/application-auto-scaler/notes/</guid>
      <description>

&lt;h1 id=&#34;questions:db235fc914867ffea6b540c8732499d5&#34;&gt;Questions&lt;/h1&gt;

&lt;p&gt;After completing the lab recap as a class the following questions:&lt;/p&gt;

&lt;h2 id=&#34;general-discussion-questions:db235fc914867ffea6b540c8732499d5&#34;&gt;General Discussion Questions&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; &lt;em&gt;What are some challenges with regard to Monoliths?&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt; Open discussion.  It will be interesting to see if students agree have experienced these:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;not appropriate for the cloud&lt;/li&gt;
&lt;li&gt;couple change cycles together&lt;/li&gt;
&lt;li&gt;services can&amp;rsquo;t be scaled independently&lt;/li&gt;
&lt;li&gt;too many devs in one codebase&lt;/li&gt;
&lt;li&gt;developers understanding a large codebase&lt;/li&gt;
&lt;li&gt;long term commitment to tech stack.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; &lt;em&gt;How do microservices differ from SOA/ESB based approach?&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt; There is no central orchestrator.  The microservices know how to discover and work with each other.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; &lt;em&gt;What is a bounded context?&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt; It is taken from Eric Evan&amp;rsquo;s domain Driven Design.  It essentially means that having a holistic unified enterprise data model is impossible nor cost effective.  However, having a unified data model under a specific context is possible.  This is because everyone within that context understands the model the same way.  This means that other bounded contexts can define similar models based on their view of them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; &lt;em&gt;How can the move to microservices affect your team structure?&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt; Often with the move to microservices there is a shift to a DevOps culture and an organization around Business Capability teams. Why?  Because managing it via silos doesn&amp;rsquo;t work very well.  Business Capability Teams are responsible for their apps in production.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; &lt;em&gt;What are some characteristics of a microservices architecture?&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Polyglot Persistence&lt;/li&gt;
&lt;li&gt;Polyglot Languages&lt;/li&gt;
&lt;li&gt;Cloud Friendly Protocols (HTTP, AMQP).  Not RMI or anything else language specific.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; &lt;em&gt;What are some microservice benefits?&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;decoupled change cycles&lt;/li&gt;
&lt;li&gt;efficient scaling&lt;/li&gt;
&lt;li&gt;smaller codebase to learn&lt;/li&gt;
&lt;li&gt;fewer developers in each codebase&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; &lt;em&gt;How does Pivotal Cloud Foundry address some of the challenges with microservices?&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dynamic Routing&lt;/li&gt;
&lt;li&gt;Scaling&lt;/li&gt;
&lt;li&gt;Monitoring&lt;/li&gt;
&lt;li&gt;Services&lt;/li&gt;
&lt;li&gt;Health Mgmt&lt;/li&gt;
&lt;li&gt;Buildpacks&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;questions-from-the-lab:db235fc914867ffea6b540c8732499d5&#34;&gt;Questions From the Lab&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; &lt;em&gt;How do you handle autoscaling today?&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt; Open discussion, trying to highlight the value of the platform.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; &lt;em&gt;What 12 factor principles are important when it comes to scaling?&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt; There could be others listed here, but Disposability (quick start up times) is definitely key.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; &lt;em&gt;How do you handle scaling at the data layer?&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;A:&lt;/strong&gt; This is an open discussion.  Meaning how do they do it today.  The key here is that you also need elasticity at the data layer.  Transactional solutions such as GemFire go here.  To my knowledge usually managed as a User Provided Service Instance.&lt;/p&gt;

&lt;h1 id=&#34;troubleshooting:db235fc914867ffea6b540c8732499d5&#34;&gt;Troubleshooting&lt;/h1&gt;

&lt;p&gt;Troubleshooting guidance for the lab that instructors need to know.&lt;/p&gt;

&lt;h1 id=&#34;feedback:db235fc914867ffea6b540c8732499d5&#34;&gt;Feedback&lt;/h1&gt;

&lt;p&gt;Please keep track of all types of feedback, so that we can make this module great.  That includes questions that students may ask that we should be answering up front, lab corrections/improvements, etc.&lt;/p&gt;

&lt;p&gt;Submit feedback to: &lt;a href=&#34;mailto:pcf-developer-instructor-feedback@pivotal.io&#34;&gt;pcf-developer-instructor-feedback@pivotal.io&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>